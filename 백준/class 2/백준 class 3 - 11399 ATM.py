#줄을 [2, 5, 1, 4, 3] 순서로 줄을 서면, 2번 사람은 1분만에, 5번 사람은 1+2 = 3분, 1번 사람은 1+2+3 = 6분, 4번 사람은 1+2+3+3 = 9분, 3번 사람은 1+2+3+3+4 = 13분이 걸리게 된다. 각 사람이 돈을 인출하는데 필요한 시간의 합은 1+3+6+9+13 = 32분이다. 이 방법보다 더 필요한 시간의 합을 최소로 만들 수는 없다.

#줄을 서 있는 사람의 수 N과 각 사람이 돈을 인출하는데 걸리는 시간 Pi가 주어졌을 때, 각 사람이 돈을 인출하는데 필요한 시간의 합의 최솟값을 구하는 프로그램을 작성하시오.


import sys

n,*m =[int(i) for i in sys.stdin.read().rstrip().split()]
m.sort()
s=0
dp=0
for j in m:
        dp+=j
        s+=dp
print(s)

#sort 정렬 자체가 그리디 알고리즘으로 분류된다.
#시간이 적게 걸리는 사람을 앞에 세우는 게 그 상황에는 합리적이기 때문.
#물론 시간 손해를 보는 알고리즘도 있겠지만, 이 문제에서는 통한다.